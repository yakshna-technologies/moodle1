@@ -1,77 +1,83 @@
# PLEASE NOTE: Travis is not currently utilised by the Moodle core integration
# process (which uses our internal CI system) this file is here for the benefit
# of community developers git clones - see MDL-51458.
#testing
sudo: false
# We currently disable Travis notifications entirely until https://github.com/travis-ci/travis-ci/issues/4976
# is fixed.
notifications:
  email: false
language: php
php:
    # We only run the highest and lowest supported versions to reduce the load on travis-ci.org.
    - 7.4
env:
    # Although we want to run these jobs and see failures as quickly as possible, we also want to get the slowest job to
    # start first so that the total run time is not too high.
    #
    # We only run MySQL on PHP 5.6, so run that first.
    # CI Tests should be second-highest in priority as these only take <= 60 seconds to run under normal circumstances.
    # Postgres is significantly is pretty reasonable in its run-time.
    # Run unit tests on MySQL
    - DB=mysqli   TASK=PHPUNIT
    # Run CI Tests without running PHPUnit.
    - DB=none     TASK=CITEST
    # Run unit tests on Postgres
    - DB=pgsql    TASK=PHPUNIT
    # Perform an upgrade test too.
    - DB=pgsql    TASK=UPGRADE
matrix:
    # Enable fast finish.
    # This will fail the build if a single job fails (except those in allow_failures).
    # It will not stop the jobs from running.
    fast_finish: true
    include:
          # Run grunt/npm install on highest version ('node' is an alias for the latest node.js version.)
        - php: 7
          env: DB=none     TASK=GRUNT   NVM_VERSION='lts/carbon'
    exclude:
        # MySQL - it's just too slow.
        # Exclude it on all versions except for 7.0
        # - env: DB=mysqli   TASK=PHPUNIT
        #   php: 5.6
        #
        # - env: DB=mysqli   TASK=PHPUNIT
        #   php: 5.5
        # Moodle 2.7 is not compatible with PHP 7 for the upgrade test.
        - env: DB=pgsql    TASK=UPGRADE
          php: 7.4
cache:
    directories:
      - $HOME/.composer/cache
      - $HOME/.npm

#deploy:
    #provider: pages
    #skip-cleanup: true
    #on:
     # branch: moodle_branch_trav
deploy:
    provider: pages
    skip-cleanup: true
    on:
      branch: moodle_branch_trav
  provider: s3
  access_key_id: "AKIAU5H2IFPLOX7SMKHZ"
  secret_access_key: "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"
  bucket: "moodletest123"
  skip_cleanup: true

install:
    - >
        if [ "$TASK" = 'PHPUNIT' ];
        then
            if [ -n "$GITHUB_APITOKEN" ]; then
                composer config github-oauth.github.com $GITHUB_APITOKEN;
                echo 'auth.json' >> .git/info/exclude
            fi
            # Install composer dependencies.
            # We need --no-interaction in case we hit API limits for composer. This causes it to fall back to a standard clone.
            # Typically it should be able to use the Composer cache if any other job has already completed before we started here.
            travis_retry composer install --prefer-dist --no-interaction;
        fi
    - >
        if [ "$TASK" = 'GRUNT' ];
        then
            nvm install $NVM_VERSION ;
            nvm use $NVM_VERSION ;
        fi
        
before_script:
    - phpenv config-rm xdebug.ini
    - >
      if [ "$TASK" = 'PHPUNIT' -o "$TASK" = 'UPGRADE' ];
      then
        # Copy generic configuration in place.
        cp config-dist.php config.php ;
        # Create the moodledata directory.
        mkdir -p "$HOME"/roots/base
        # The database name and password.
        sed -i \
          -e "s%= 'moodle'%= 'travis_ci_test'%" \
          -e "s%= 'password'%= ''%" \
          config.php ;
        # The wwwroot and dataroot.
        sed -i \
          -e "s%http://example.com/moodle%http://localhost%" \
          -e "s%/home/example/moodledata%/home/travis/roots/base%" \
          config.php ;
        if [ "$DB" = 'pgsql' ];
        then
          # Postgres-specific setup.
@@ -235,4 +241,4 @@
        fi
      fi